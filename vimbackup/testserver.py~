from twisted.internet import reactor
from twisted.internet.protocol import Factory, Protocol
from twisted.internet.endpoints import TCP4ServerEndpoint

class Echo(Protocol):

    def connectionMade(self):
        self.factory.numProtocols = self.factory.numProtocols + 1
        self.transport.write("Welcome to my server. There are %d bozos on right now." % self.factory.numProtocols)

    def connectionLost(self, reason):
        self.factory.numProtocols = self.factory.numProtocols - 1

    def dataReceived(self, data):
        self.transport.write(data)

class EchoFactory(Factory):
    protocol = Echo
    def __init__(self):
        print "Factory working"

    def buildProtocol(self, addr):
        return Echo()

endpoint = TCP4ServerEndpoint(reactor, 8007)
endpoint.listen(EchoFactory)
print "Working"
reactor.run()
